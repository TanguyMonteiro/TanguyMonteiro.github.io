{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","\n<button (click)=\"hideChucks()\">Cach√© les chucks</button>\n<button (click)=\"getJokesFromApi()\">afficher une blague de l'api</button>\n<button (click)=\"getJokesApiByCategory('food')\">Food</button>\n<div>\n  <button *ngFor=\"let cat of category\" (click)=\"getJokesApiByCategory(cat)\">{{cat}}</button>\n</div>\n<p>{{testChuck.value}}</p>\n<div class=\"api\" *ngFor=\"let chuck of testChuck\">\n  <img src=\"{{chuck.icon_url}}\">\n  <p>{{chuck.value}}</p>\n\n</div>\n\n","import { Component } from '@angular/core';\nimport {HttpClient, HttpClientModule} from '@angular/common/http';\nimport {Observable} from \"rxjs\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  private url = \"https://api.chucknorris.io/jokes/random\";\n\n  category:any = null\n\n constructor(private http : HttpClient){\nthis.getCategory()\n };\n\n  title = 'chuckapi';\n  testChuck:any = [];\n  category:any = [];\n\n  hideChucks(){\n    this.testChuck = [];\n  }\n  getJokesFromApi(){\n    this.http.get(this.url).subscribe(chuckResponse =>{\n      this.testChuck.push(chuckResponse)\n    });\n  }\n  getJokesApiByCategory(category:string){\n    this.http.get(\"https://api.chucknorris.io/jokes/random?category=\"+category).subscribe(chuckResponse =>{\n      this.testChuck.push(chuckResponse)\n    });\n  }\ngetCategory(){\n    this.http.get(\"https://api.chucknorris.io/jokes/categories\").subscribe(categoryResponse=>{\n      this.category = categoryResponse   });\n};\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {HttpClientModule} from \"@angular/common/http\";\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule ,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}